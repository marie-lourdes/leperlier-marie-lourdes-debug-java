package com.hemebiotech.analytics;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.util.List;
import java.util.Map;
import java.util.HashMap;
import java.util.TreeMap;

public class AnalyticsCounter { 
	private static ReadSymptomDataFromFile readerSymptomsData;
	private static List<String> readListSymptoms;
	private static  Map<String, Integer> mapSymptomsOccurences; 
    private static Map<String,Integer> mapSymptomsOccurencesSorted; 
	//instantiation of the WriteSymptomDataToFile class with the mapSymptomsData reference 
	//to use the ISymptomWriter interface method implemented by the class	
	private static WriteSymptomDataToFile writerSymptomsData; 
			
	public static void main(String args[]) throws Exception {
        writerSymptomsData = new WriteSymptomDataToFile();
        mapSymptomsOccurences= new HashMap<String,Integer>();
        // creation of the TreeMap to arrange  the content of mapSymptomsOccurences in alphabetical order
        mapSymptomsOccurencesSorted = new TreeMap<String,Integer>();
	    // call the method countSymptomsOccurrences()
        // Used to add symptoms and count the occurences in a HashMap called mapSymptomsOccurences
		countSymptomsOccurrences(mapSymptomsOccurences);
        // Used to sort the mapSymptomsOccurences and generate a TreeMap called mapSymptomsOccurencesSorted
        sortMapSymptoms(mapSymptomsOccurences);
        // call the method of interface ISymptomWriter implemented by the class WriteSymptomDataToFile 
        // Used to test the output and content of the mapSymptomsOccurrencesSorted generated by the method sortMapSymptoms
       
       writerSymptomsData.writeSymptoms( mapSymptomsOccurencesSorted);
		
	}

    public static void countSymptomsOccurrences(Map<String,Integer> symptoms) {
		//instantiation of the class ReadSymptomDtaFromFile and use of the method of the interface implemented by the class ReadSymptomDataFromFile
		readerSymptomsData = new ReadSymptomDataFromFile("symptoms.txt");
		readListSymptoms= readerSymptomsData.getSymptoms();
 
		// loop For Each that adds the listSymptoms key symptom and value number occurrence in a TreeMap
		// the number of occurrences is incremented if the symptoms is already present in the TreeMap called mapSymptomsOccurences otherwise 1 is added if the symptom does not exist in the TreeMap
		for( String symptom:readListSymptoms ) {
            if(!mapSymptomsOccurences.containsKey(symptom)) {
                mapSymptomsOccurences.put(symptom,1);
            }else {
                int numberOfOccurrencesSymptom= mapSymptomsOccurences.get(symptom);
                mapSymptomsOccurences.put(symptom, numberOfOccurrencesSymptom+1);
            }
								
		} 
       
	}

    public static void sortMapSymptoms(Map<String,Integer> symptoms) {
       mapSymptomsOccurencesSorted.putAll( symptoms);   
	}

}